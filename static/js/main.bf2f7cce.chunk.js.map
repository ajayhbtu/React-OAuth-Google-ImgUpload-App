{"version":3,"sources":["components/Image.jsx","components/Auth.jsx","components/App.jsx","index.js"],"names":["Image","props","useState","pictures","setPictures","withIcon","onChange","picture","imgExtension","maxFileSize","Auth","name","setName","email","setEmail","imgUrl","setImgUrl","isLoggedIn","setIsLoggedIn","src","alt","clientId","buttonText","onLogoutSuccess","console","log","alert","className","withPreview","onSuccess","res","profileObj","imageUrl","onFailure","cookiePolicy","isSignedIn","App","ReactDOM","render","document","getElementById"],"mappings":"2OAoBeA,MAjBf,SAAeC,GAAQ,IAAD,EACYC,mBAAS,IADrB,mBACbC,EADa,KACHC,EADG,KAMpB,OACE,cAAC,IAAD,2BACMH,GADN,IAEEI,UAAU,EACVC,SAPW,SAAAC,GACbH,EAAY,GAAD,mBAAKD,GAAL,CAAeI,MAOxBC,aAAc,CAAC,OAAQ,QAAS,OAAQ,QACxCC,YAAa,YC2CJC,MAtDf,SAAcT,GAAQ,IAAD,EACKC,mBAAS,SADd,mBACZS,EADY,KACNC,EADM,OAEOV,mBAAS,IAFhB,mBAEZW,EAFY,KAELC,EAFK,OAGSZ,mBAAS,IAHlB,mBAGZa,EAHY,KAGJC,EAHI,OAIiBd,oBAAS,GAJ1B,mBAIZe,EAJY,KAIAC,EAJA,KAwBnB,OAAOD,EACL,gCACE,gCACE,0CAAaN,EAAb,OACA,4BAAIE,IACJ,qBAAKM,IAAKJ,EAAQK,IAAc,UAATT,EAAmB,GAAKA,OAGjD,cAAC,eAAD,CACEU,SAAS,2EACTC,WAAW,SACXC,gBAjBkB,WACtBL,GAAc,GACdM,QAAQC,IAAI,4BACZC,MAAM,sCAgBJ,cAAC,EAAD,CAAOC,UAAU,gBAAgBC,aAAa,OAGhD,gCACE,gDACA,cAAC,IAAD,CACEP,SAAS,2EACTC,WAAW,QACXO,UAvCiB,SAACC,GACtBlB,EAAQkB,EAAIC,WAAWpB,MACvBG,EAASgB,EAAIC,WAAWlB,OACxBG,EAAUc,EAAIC,WAAWC,UACzBd,GAAc,IAoCVe,UAjCiB,SAACH,GACtBN,QAAQC,IAAI,qBAAsBK,GAClCJ,MAAM,qBAgCFQ,aAAc,qBACdC,YAAY,Q,MC5CLC,MAJf,SAAanC,GACX,OAAO,cAAC,EAAD,KCAToC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bf2f7cce.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ImageUploader from \"react-images-upload\";\n\nfunction Image(props) {\n  const [pictures, setPictures] = useState([]);\n\n  const onDrop = picture => {\n    setPictures([...pictures, picture]);\n  };\n  return (\n    <ImageUploader\n      {...props}\n      withIcon={true}\n      onChange={onDrop}\n      imgExtension={[\".jpg\", \".jpeg\", \".png\", \".gif\"]}\n      maxFileSize={5242880}\n    />\n  );\n};\n\nexport default Image;","import React, { useState } from \"react\";\nimport GoogleLogin, { GoogleLogout } from \"react-google-login\";\nimport Image from \"./Image\";\n\nfunction Auth(props) {\n  const [name, setName] = useState(\"Guest\");\n  const [email, setEmail] = useState(\"\");\n  const [imgUrl, setImgUrl] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const onLoginSuccess = (res) => {\n    setName(res.profileObj.name);\n    setEmail(res.profileObj.email);\n    setImgUrl(res.profileObj.imageUrl);\n    setIsLoggedIn(true);\n  };\n\n  const onLoginFailure = (res) => {\n    console.log(\"Login failed: res:\", res);\n    alert(`Failed to login!`);\n  };\n\n  const onLogoutSuccess = () => {\n    setIsLoggedIn(false);\n    console.log(\"Logout made successfully\");\n    alert(\"Logout made successfully âœŒ\");\n  };\n\n  return isLoggedIn ? (\n    <div>\n      <div>\n        <h2>Welcome {name}!</h2>\n        <p>{email}</p>\n        <img src={imgUrl} alt={name === \"Guest\" ? \"\" : name}></img>\n      </div>\n\n      <GoogleLogout\n        clientId=\"159620068686-ijluvm55n3rb6mi7jtjf8j350shu0odk.apps.googleusercontent.com\"\n        buttonText=\"Logout\"\n        onLogoutSuccess={onLogoutSuccess}\n      ></GoogleLogout>\n      <Image className=\"img-container\" withPreview={true} />\n    </div>\n  ) : (\n    <div>\n      <h2>Welcome Guest!</h2>\n      <GoogleLogin\n        clientId=\"159620068686-ijluvm55n3rb6mi7jtjf8j350shu0odk.apps.googleusercontent.com\"\n        buttonText=\"Login\"\n        onSuccess={onLoginSuccess}\n        onFailure={onLoginFailure}\n        cookiePolicy={\"single_host_origin\"}\n        isSignedIn={true}\n      />\n    </div>\n  );\n}\n\nexport default Auth;\n","import React from \"react\";\nimport Auth from \"./Auth\";\nimport \"../styles.css\";\n\nfunction App(props) {\n  return <Auth />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}